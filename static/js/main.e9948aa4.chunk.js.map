{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","marginLeft","float","color","bind","Link","to","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","console","log","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e9948aa4.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n       return {\r\n         ...state,\r\n         contacts: state.contacts.filter(contact=>contact.id !== action.payload)\r\n       };\r\n\r\n   case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload,...state.contacts]\r\n      };\r\n\r\n    case 'UPDATE_CONTACT':\r\n       return {\r\n         ...state,\r\n         contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload)\r\n                                      : contact)\r\n       };\r\n\r\n    default: return state;\r\n\r\n  }\r\n}\r\n\r\nexport class Provider extends Component {\r\n  state= {\r\n     contacts:[],\r\n     dispatch: action => this.setState(state => reducer(state,action))\r\n\r\n   };\r\n\r\nasync componentDidMount(){\r\n  const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n  this.setState({contacts: res.data});\r\n}\r\n\r\n\r\n render(){\r\n   return(\r\n     <Context.Provider value={this.state}>\r\n       {this.props.children}\r\n     </Context.Provider>\r\n   )\r\n }\r\n\r\n\r\n}\r\n\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from '../../context';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Contact extends Component {\r\n\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try{\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n          dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        }\r\n    catch (e){\r\n      dispatch({type: 'DELETE_CONTACT', payload: id});\r\n    }\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    const {id, name, email, phone} = this.props.contact;\r\n    const {showContactInfo} = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const {dispatch} = value;\r\n          return(\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>{name}\r\n                  <i onClick={() =>\r\n                      this.setState({showContactInfo: !this.state.showContactInfo})}\r\n                     className=\"fas fa-sort-down\"\r\n                     style={{cursor: 'pointer', marginLeft: '10px'}}>\r\n                  </i>\r\n                  <i className=\"fas fa-times\"\r\n                     style={{cursor: 'pointer', float: 'right', color: 'red'}}\r\n                     onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n                  <Link to={`contact/edit/${id}`}>\r\n                    <i className=\"fas fa-pencil-alt mr-2\"\r\n                       style={{cursor: 'pointer', float: 'right', color: 'black'}}></i>\r\n                  </Link>\r\n              </h4>\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">{email}</li>\r\n                  <li className=\"list-group-item\">{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n\r\n\r\n\r\n    );\r\n  }\r\n\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context';\r\n\r\n\r\nclass Contacts extends Component {\r\n\r\n\r\n\r\n  render() {\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const {contacts} = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\">\r\n                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                 key={contact.id}\r\n                 contact={contact}\r\n                />\r\n              ))}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return(\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name} className=\"mr-2\">{label}: </label>\r\n      <input type={type}\r\n             name={name}\r\n             className={classnames('form-control', {'is-invalid' : error})}\r\n             placeholder={placeholder}\r\n             value={value}\r\n             onChange={onChange}\r\n       />\r\n      {error && <div\r\n                    className=\"invalid-feedback\">\r\n                    {error}\r\n                    </div>}\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n\r\n  state={\r\n    name:'',\r\n    email:'',\r\n    phone:'',\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const {name, email, phone} = this.state;\r\n\r\n    // Check Errors\r\n    if(name=== ''){\r\n        this.setState({errors: {name: 'Name is required'}});\r\n        return;\r\n      }\r\n    if(email=== ''){\r\n        this.setState({errors: {email: 'Email is required'}});\r\n        return;\r\n      }\r\n    if(phone=== ''){\r\n        this.setState({errors: {phone: 'Phone is required'}});\r\n        return;\r\n      }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users/', newContact);\r\n\r\n           dispatch({type: 'ADD_CONTACT', payload: res.data});\r\n\r\n\r\n    this.setState({\r\n      name: '',\r\n      email:'',\r\n      phone:'',\r\n      errors:{}\r\n    });\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e => this.setState({[e.target.name]: e.target.value});\r\n\r\n  render() {\r\n    const {name, email, phone, errors} = this.state;\r\n\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const {dispatch} = value;\r\n          return(\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone Number...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-primary btn-block\"/>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n\r\n  state={\r\n    name:'',\r\n    email:'',\r\n    phone:'',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount(){\r\n    const {id} = this.props.match.params;\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    })\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const {name, email, phone} = this.state;\r\n\r\n    // Check Errors\r\n    if(name=== ''){\r\n        this.setState({errors: {name: 'Name is required'}});\r\n        return;\r\n      }\r\n    if(email=== ''){\r\n        this.setState({errors: {email: 'Email is required'}});\r\n        return;\r\n      }\r\n    if(phone=== ''){\r\n        this.setState({errors: {phone: 'Phone is required'}});\r\n        return;\r\n      }\r\n\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    }\r\n\r\n    const {id} = this.props.match.params;\r\n\r\n    const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n    dispatch({type:'UPDATE_CONTACT', payload: res.data});\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email:'',\r\n      phone:'',\r\n      errors:{}\r\n    });\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  onChange = e => this.setState({[e.target.name]: e.target.value});\r\n\r\n  render() {\r\n    const {name, email, phone, errors} = this.state;\r\n\r\n    return(\r\n      <Consumer>\r\n        {value => {\r\n          const {dispatch} = value;\r\n          return(\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone Number...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-primary btn-block\"/>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const {branding} = props;\r\n  return(\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fas fa-home mr-1\"></i>Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n                <i className=\"fas fa-plus mr-1\"></i>Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fas fa-question mr-1\"></i>About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n} ;\r\n","import React from 'react';\r\n\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404 </span>Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  );\r\n} ;\r\n","import React, { Component } from 'react';\r\n\r\nclass Test extends Component {\r\n\r\n  state={\r\n    title:'',\r\n    body:''\r\n  }\r\n\r\n  componentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n      .then(response => response.json())\r\n      .then(data => this.setState({title:data.title, body: data.body}))\r\n  }\r\n  //\r\n  // componentWillMount(){\r\n  //   console.log('Component will Mount');\r\n  // }\r\n\r\n  render() {\r\n    const {title, body} = this.state\r\n    console.log('Component Rendered');\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1>\r\n        <p>{body}</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport {Provider} from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n      <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component=\n                {Contacts} />\n                <Route exact path=\"/contact/add\" component=\n                {AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component=\n                {EditContact} />\n                <Route exact path=\"/about\" component=\n                {About} />\n                <Route exact path=\"/test\" component=\n                {Test} />\n                <Route component=\n                {NotFound} />\n              </Switch>\n            </div>\n          </div>\n      </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}